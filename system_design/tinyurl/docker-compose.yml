version: '3.8'
services:
  shorten-app:
    image: nginx:latest
    environment:
      - API_URL=http://localhost:8081
    volumes:
      - ./shorten-app/nginx.template:/etc/nginx/templates/app.conf.template:ro
      - ./shorten-app/www:/www/data:ro
    ports:
      - "8080:8080"
    depends_on:
      - shorten-api-load-balancer

  shorten-api-api-swagger:
    image: swaggerapi/swagger-ui
    ports:
      - 8090:8080
    environment:
      - SWAGGER_JSON=/swagger.yaml
    volumes:
      - ./shorten-api/swagger.yaml:/swagger.yaml:delegated
    depends_on:
      - shorten-api-load-balancer

  shorten-api-load-balancer:
    image: nginx:latest
    volumes:
      - ./build/shorten-api-lb.nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - shorten-api
    ports:
      - "8081:8080"

  shorten-api:
    build:
      context: .
      dockerfile: build/Dockerfile.local
    depends_on:
      - key-generation-service-load-balancer
      - postgres
    ports:
      - 5005-5105:5005
    environment:
      POSTGRES_URL: jdbc:postgresql://postgres:5432/tiny_url
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: G3sfF7@tFd#
    volumes:
      - maven_repo:/root/.m2/repository
      - ./shorten-api:/app:delegated
    working_dir: /app
    command: mvn spring-boot:run -Dspring-boot.run.jvmArguments="-Dlogging.level.com.ewgra=DEBUG -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/readiness"]
      interval: 2s
      timeout: 2s
      retries: 5

  key-generation-service-load-balancer:
    image: nginx:latest
    volumes:
      - ./build/key-generation-service-lb.nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - key-generation-service

  key-generation-service:
    image: ewgra/key_generation_service:0.0.1
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    environment:
      ZOO_KEEPER_CONNECT_STRING: zoo1:2181,zoo2:2181,zoo3:2181
      ZOO_KEEPER_NODE: /key_generation_service_counter
      COUNTER_RANGE_CAPACITY: 100

  zoo1:
    image: zookeeper
    restart: always
    hostname: zoo1
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo2:
    image: zookeeper
    restart: always
    hostname: zoo2
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo3:
    image: zookeeper
    restart: always
    hostname: zoo3
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181

  visitor-app-load-balancer:
    image: nginx:latest
    volumes:
      - ./build/visitor-app-lb.nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - visitor-app
    ports:
      - "8082:8080"

  visitor-app:
    build:
      context: .
      dockerfile: build/Dockerfile.local
    depends_on:
      - postgres
    ports:
      - 5106-5205:5005
    environment:
      POSTGRES_URL: jdbc:postgresql://postgres:5432/tiny_url
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: G3sfF7@tFd#
    volumes:
      - maven_repo:/root/.m2/repository
      - ./visitor-app:/app:delegated
    working_dir: /app
    command: mvn spring-boot:run -Dspring-boot.run.jvmArguments="-Dlogging.level.com.ewgra=DEBUG -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/readiness"]
      interval: 2s
      timeout: 2s
      retries: 5

  postgres:
    image: postgres
    environment:
      POSTGRES_PASSWORD: G3sfF7@tFd#
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  maven_repo:
  postgres-data:
